{"version":3,"sources":["components/chatInput.js","components/message.js","services/login.js","components/loginPage.js","components/register.js","reducers/messageReducer.js","services/messages.js","App.js","serviceWorker.js","index.js"],"names":["ChatInput","props","react_default","a","createElement","input","className","placeholder","value","chatText","onChange","setChatText","target","onPressEnter","handleEnter","Messages","row","onContextMenu","handleContextMenu","username","message","services_login","login","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","credentials","response","wrap","_context","prev","next","axios","post","sent","abrupt","data","stop","_x","apply","this","arguments","register","_ref2","_callee2","_context2","_x2","Form","create","_props$form","form","getFieldDecorator","validateFields","es_form","onSubmit","event","preventDefault","err","values","userCredentials","activeUser","console","log","password","loginService","setActiveUser","setDisplayPage","remember","window","localStorage","setItem","JSON","stringify","Item","rules","required","prefix","icon","type","valuePropName","initialValue","es_checkbox","es_button","htmlType","onClick","messageReducer","state","length","undefined","action","concat","editedMessage","toConsumableArray","newMessage","id","map","filter","baseURL","messages","getMessages","get","sendMessage","messageObject","updateMessage","_ref3","_callee3","_context3","put","_x3","deleteMessage","_ref4","_callee4","_context4","delete","_x4","socket","io","mapDispatchToProps","editMessage","connect","_useState","useState","_useState2","slicedToArray","displayPage","_useState3","_useState4","_useState5","_useState6","showMenu","setShowMenu","_useState7","_useState8","_useState9","_useState10","currentID","setCurrentID","_useState11","_useState12","editMode","setEditMode","_useState13","_useState14","left","setLeft","_useState15","_useState16","top","setTop","divRef","React","createRef","useEffect","addEventListener","savedMessages","messageService","fetchMessages","loggedUserJSON","getItem","user","parse","on","current","scrollIntoView","handleEdit","messageToEdit","edit","handleDelete","emit","handleLogout","removeItem","menuStyle","display","position","showMessages","content","components_message","key","pageX","pageY","justify","components_loginPage","ref","style","components_chatInput","components_register","Boolean","location","hostname","match","reducer","combineReducers","store","createStore","render","getState","ReactDOM","es","src_App_0","document","getElementById","subscribe","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a9b79236.chunk.js","sourcesContent":["import React from 'react';\nimport { Input, Row  } from 'antd';\nimport './chatInput.css'\n\n\nconst ChatInput = (props) => {\n\n  return (\n    \n      <Input className=\"chat-input\" placeholder=\"Message\" value={props.chatText} onChange={value => props.setChatText(value.target.value)} onPressEnter={props.handleEnter} />\n   \n    \n  );\n}\n\nexport default ChatInput;\n","import React from 'react';\nimport { Row } from 'antd';\n\nconst Messages = (props) => {\n\n  return (\n    <div>\n      <Row onContextMenu={props.handleContextMenu}>\n        <strong>{props.username}</strong>\n        <div ><p>{props.message}</p></div>\n      </Row>\n    </div>\n  )\n}\n\nexport default Messages;\n","import axios from 'axios';\n\nconst login = async (credentials) => {\n  const response = await axios.post('/login', credentials);\n  return response.data;\n}\n\nconst register = async (credentials) => {\n  await axios.post('/register', credentials);\n}\n\nexport default { login, register };\n","import React from 'react';\nimport { Row, Form, Icon, Input, Button, Checkbox } from 'antd';\nimport './loginPage.css';\nimport loginService from '../services/login';\n\nconst LoginPage = (props) => {\n  const { getFieldDecorator, validateFields } = props.form\n  \n  const handleSubmit = (event) => {\n    event.preventDefault();\n    validateFields(async (err, values) => {\n      if(err) {\n        console.log('Wrong values were entered');\n      }\n      \n      const userCredentials = {\n        username: values.username,\n        password: values.password,\n      }\n      \n      const activeUser = await loginService.login(userCredentials);\n      props.setActiveUser(activeUser.username);\n      props.setDisplayPage('CHAT');\n      if (values.remember) {\n        window.localStorage.setItem('loggedUser', JSON.stringify(userCredentials));\n      }\n      \n    })\n  }\n\n  const handleRegister = (event) => {\n    event.preventDefault();\n    props.setDisplayPage('REGISTER');\n  }\n  return (\n    <div className='container'>\n      <Form onSubmit={handleSubmit} className='login-form'>\n        <Form.Item>\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: 'Please input your username' }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\"/>}\n              placeholder=\"Username\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password' }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\"/>}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n           {getFieldDecorator('remember', {\n            valuePropName: 'checked',\n            initialValue: true,\n          })(<Checkbox>Remember me</Checkbox>)}\n          <Row>\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n              Log in\n            </Button>\n          </Row>\n          Or <a onClick={handleRegister}>register now!</a>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default Form.create()(LoginPage);\n","import React from 'react';\nimport { Row, Form, Icon, Input, Button } from 'antd';\nimport './loginPage.css';\nimport loginService from '../services/login';\n\nconst Register = (props) => {\n  const { getFieldDecorator, validateFields } = props.form\n  \n  const handleSubmit = (event) => {\n    event.preventDefault();\n    validateFields(async (err, values) => {\n      if(err) {\n        console.log('Wrong values were entered');\n      }\n      \n      const userCredentials = {\n        username: values.username,\n        password: values.password,\n      }\n      \n      await loginService.register(userCredentials);\n      props.setDisplayPage('LOGIN');\n      \n    })\n  }\n  return (\n    <div className='container'>\n      <Form onSubmit={handleSubmit} className='login-form'>\n        <Form.Item>\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: 'Please input your username' }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\"/>}\n              placeholder=\"Username\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password' }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\"/>}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n        </Form.Item>\n          <Row>\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n              Register\n            </Button>\n          </Row>\n      </Form>\n    </div>\n  );\n};\n\nexport default Form.create()(Register);\n","import messageHelper from '../components/messages_helper';\n\nconst messageReducer = (state = null, action) => {\n  switch(action.type) {\n    case 'NEW': {\n      if(state) {\n        const newState = state.concat(action.data);\n        return newState;\n      }\n      return action.data;\n    }\n    case 'EDIT': {\n      const editedMessage = [...state];\n      const newMessage = {\n        message: action.message,\n        username: action.username,\n        id: action.id,\n      };\n      return editedMessage.map(message => message.id === action.id ? newMessage : message);\n    }\n    case 'DELETE': {\n      const deletedMessage = [...state];\n      return deletedMessage.filter(message => message.id !== action.id);\n    }\n    default:\n      return state;\n  }\n}\n\nexport const sendMessage = (data) => (\n  {\n    type: 'NEW',\n    data,\n  }\n)\n\nexport const editMessage = (message, username, id) => (\n  {\n    type: 'EDIT',\n    message,\n    username,\n    id,\n  }\n)\n\nexport const deleteMessage = (id) => (\n  {\n    type: 'DELETE',\n    id,\n  }\n)\nexport default messageReducer;\n","import axios from 'axios';\nconst baseURL = '/api/messages';\n\nconst getMessages = async () => {\n  const response = await axios.get(baseURL);\n  return response.data;\n}\n\nconst sendMessage = async (messageObject) => {\n  const response = await axios.post(baseURL, messageObject);\n  return response.data;\n}\n\nconst updateMessage = async (messageObject, id) => {\n  const response = await axios.put(`${baseURL}/${id}`, messageObject);\n  return response.data;\n}\n\nconst deleteMessage = async (id) => {\n  const response = await axios.delete(`${baseURL}/${id}`);\n  return response.data;\n}\nexport default { getMessages, sendMessage, updateMessage, deleteMessage };\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport io from 'socket.io-client';\nimport './App.css';\nimport { Row, Button } from 'antd';\nimport ChatInput from './components/chatInput';\nimport Message from './components/message';\nimport LoginPage from './components/loginPage';\nimport Register from './components/register';\nimport { sendMessage, editMessage, deleteMessage } from './reducers/messageReducer';\nimport messageService from './services/messages';\n\nconst socket = io('http://localhost:3001');\n\nconst App = (props) => {\n  const [displayPage, setDisplayPage] = useState('LOGIN');\n  const [activeUser, setActiveUser] = useState(null);\n  const [showMenu, setShowMenu] = useState(false);\n  const [chatText, setChatText] = useState('');\n  const [currentID, setCurrentID] = useState(null);\n  const [editMode, setEditMode] = useState(false);\n  const [left, setLeft] = useState(0);\n  const [top, setTop] = useState(0);\n\n  const { sendMessage, message } = props;\n\n  const divRef = React.createRef(); //Used to ref the hidden <div> at the bottom of the message container and keep the chat box always scrolled down\n  \n  \n  useEffect(() => {\n    //Allows left clicking anywhere to close context menu\n    window.addEventListener('click', () => setShowMenu(false));\n    const fetchMessages = async () => {\n      const savedMessages = await messageService.getMessages();\n      sendMessage(savedMessages);\n    }\n    fetchMessages();\n    const loggedUserJSON = window.localStorage.getItem('loggedUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setActiveUser(user);\n      setDisplayPage('CHAT');\n    }\n    socket.on('newMessage', data => sendMessage(data));\n    socket.on('editMessage', data => props.editMessage(data.message, data.username, data.id));\n    socket.on('deleteMessage', data => props.deleteMessage(data.id));\n  \n  }, []);\n  \n  useEffect(() => {\n    if(activeUser) {\n      divRef.current.scrollIntoView();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [message]);\n\n  // Needed to prevent double contextmenu caused by a second right click\n  useEffect(() => {\n    \n      window.addEventListener('contextmenu', event => {\n        event.preventDefault();\n      })\n    \n  }, [showMenu]);\n\n  const handleEdit = () => {\n    setEditMode(true);\n    const messageToEdit = message.filter(edit => edit.id === currentID).map(edit => edit.message);\n    setChatText(messageToEdit);\n  }\n\n  const handleDelete = async () => {\n    socket.emit('deleteMessage', currentID)\n  }\n\n  const handleEnter = async (event) => {\n    event.preventDefault();\n    if(editMode) {\n      const editedMessage = {\n        message: event.target.value,\n        username: activeUser.username,\n        id: currentID,\n      };\n\n      socket.emit('editMessage', editedMessage);\n      setEditMode(false);\n    } else {\n      \n      setChatText(event.target.value);\n      const newMessage = {\n        message: chatText,\n        username: activeUser.username,\n      };\n\n      socket.emit('newMessage', newMessage);\n    }\n    setChatText('');\n  }\n\n  const handleContextMenu = (event, username, id) => {\n    event.preventDefault();\n    if (activeUser.username === username) {\n      setShowMenu(true);\n      setLeft(event.pageX)\n      setTop(event.pageY)\n      setCurrentID(id);\n    }\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedUser');\n    setActiveUser(null);\n    setDisplayPage('LOGIN');\n  };\n\n  const menuStyle = {\n    display: showMenu ? '' : 'none',\n    position: 'absolute',\n    left: `${left}px`,\n    top: `${top}px`,\n\n  }\n\n  const showMessages = () => {\n    if (message) {\n      return (\n      message.map(content => (\n        <Message\n          key={content.id}\n          handleContextMenu={(event) => handleContextMenu(event, content.username, content.id)}\n          username={content.username}\n          message={content.message}\n        />\n      ))\n      );\n    }\n  };\n\n  const display = () => {\n    switch(displayPage) {\n      case 'LOGIN':  {\n        return (\n          <LoginPage \n            setActiveUser={setActiveUser}\n            setDisplayPage={setDisplayPage}\n          />\n        )\n      } \n      case 'CHAT': {\n        return (\n          <div>\n          <div className='chat-container'>\n            <div className='message-container'>\n              {showMessages()}\n              <div ref={divRef}></div>\n            </div>\n            <div className='context-menu' style={menuStyle}>\n              <ul>\n                <li onClick={handleEdit}>Edit</li>\n                <li onClick={handleDelete}>Delete</li>\n              </ul>\n            </div>\n            <ChatInput\n              chatText={chatText}\n              setChatText={setChatText}\n              handleEnter={handleEnter}\n            />\n          </div>\n          <Row type=\"flex\" justify=\"center\">\n            <Button onClick={handleLogout}>Logout</Button>\n          </Row>\n        </div>\n        )\n      }\n\n      case 'REGISTER': {\n        return (\n          <Register \n            setDisplayPage={setDisplayPage}\n          />\n        )\n      }\n    }\n  }\n\n  return (\n    <div>\n      <Row type='flex' justify='center' className='header'><h1>Chat Application</h1></Row>\n      {display()}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => (\n  {\n    message: state.message,\n  }\n);\n\nconst mapDispatchToProps = (\n  {\n    sendMessage,\n    editMessage,\n    deleteMessage,\n  }\n)\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { combineReducers, createStore} from 'redux';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport messageReducer from './reducers/messageReducer';\nimport * as serviceWorker from './serviceWorker';\n\nconst reducer = combineReducers({\n  message: messageReducer,\n});\n\nconst store = createStore(reducer);\nconst render = () => {\n  console.log(store.getState());\n  ReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n  );\n}\n\nrender();\nstore.subscribe(render);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}